<%- include('../../views/partials/admin/header') %>

<head>
  <link href="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.css" rel="stylesheet" />
  <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/5.15.4/css/all.min.css">
</head>

<div class="wrapper">
  <%- include('../../views/partials/admin/sidebar') %>

  <div class="container">
    <h1 class="my-4">Add Product</h1>

    <!-- Category Form -->
    <form id="productForm" action="/admin/add-product" method="POST" class="form-horizontal" enctype="multipart/form-data" onsubmit="return validateForm();">
      <!-- Product Name -->
      <div class="form-group row">
        <label for="productName" class="col-sm-2 col-form-label">
          Product Name
        </label>
        <div class="col-sm-4">
          <input type="text" id="productName" name="productName" class="form-control" placeholder="Enter Product name" />
          <div class="invalid-feedback" id="productNameError">
            Please enter the product name.
          </div>
        </div>
        <label for="brandName" class="col-sm-2 col-form-label">
          Brand Name
        </label>
        <div class="col-sm-4">
          <select id="brand" name="brand" class="form-control">
            <option selected>No Brand</option>
            <% brands.forEach(function(brand) { %>
            <option value="<%= brand._id %>"><%= brand.brandName %></option>
            <% }); %>
          </select>
          <a href="/admin/brands/add-brand" class="text-muted mt-2 ml-3">Add brand</a>
        </div>
      </div>
      <!-- Product Description -->
      <div class="form-group">
        <label for="description" class="form-label">Product Description</label>
        <textarea id="description" name="description" class="form-control" placeholder="Enter product description"></textarea>
        <div class="invalid-feedback" id="descriptionError">
          Please enter the product description.
        </div>
      </div>

      <!-- product highlights -->
      <div class="form-group">
        <label for="highlights">Product Highlights</label>
        <div id="highlights-list">
          <input type="text" name="highlights[]" class="form-control mb-2" placeholder="Enter highlight" />
        </div>
        <button type="button" id="add-highlight" class="btn btn-secondary mt-2">
          Add Another Highlight
        </button>
      </div>

      <!-- Reg Price and Offer price -->
      <div class="form-group row">
        <label for="regularPrice" class="col-sm-2 col-form-label">Regular Price</label>
        <div class="col-sm-4">
          <input type="number" id="regularPrice" name="regularPrice" class="form-control" placeholder="Enter regular price" min="0" step="0.01" />
          <div class="invalid-feedback" id="regularPriceError">
            Please enter the regular price.
          </div>
        </div>
        <label for="productOffer" class="col-sm-2 col-form-label">Offer Percentage</label>
        <div class="col-sm-4">
          <input type="number" id="offerPrice" name="productOffer" class="form-control" placeholder="Enter Offer percentage" min="0" step="0.01" />
          <div class="invalid-feedback" id="offerPriceError">
            Please enter the Offer in Percentage.
          </div>
        </div>
      </div>

      <!-- Quantity and Category -->
      <div class="form-group row">
        <label for="quantity" class="col-sm-2 col-form-label">Quantity</label>
        <div class="col-sm-4">
          <input type="number" id="quantity" name="quantity" class="form-control" placeholder="Enter quantity" min="0" />
          <div class="invalid-feedback" id="quantityError">
            Please enter the quantity.
          </div>
        </div>
        <label for="category" class="col-sm-2 col-form-label">Category</label>
        <div class="col-sm-4">
          <select id="category" name="category" class="form-control">
            <% categories.forEach(function(category) { %>
            <option value="<%= category._id %>"><%= category.name %></option>
            <% }); %>
          </select>
        </div>
      </div>

<!-- Image Upload Container -->
      <div class="card mb-4">
        <div class="card-header bg-light">
          <h5 class="mb-0">Product Images</h5>
          <p class="text-muted small mb-0">Upload and crop product images (All 3 images required)</p>
        </div>
        <div class="card-body">
          <div class="row">
            <!-- Image 1 Upload -->
            <div class="col-md-4 mb-3">
              <div class="image-upload-container">
                <div class="image-upload-card p-3 border rounded text-center" id="uploadCard1">
                  <label for="image1" class="form-label">
                    <i class="fas fa-camera fa-2x mb-2 text-primary"></i>
                    <h6>Main Image</h6>
                    <p class="text-muted small">Click to select image</p>
                  </label>
                  <input type="file" id="image1" name="images" class="form-control d-none" accept="image/*" />
                  <img id="image1-thumbnail" src="" alt="Thumbnail" class="img-thumbnail mt-2 d-none" style="max-height: 100px; width: auto;">
                </div>
                <!-- Preview Area -->
                <div id="image1-preview" class="image-container mt-3" style="width: 100%; height: 300px; display: none">
                  <img id="image1-preview-img" src="" alt="Image 1" style="max-width: 100%; height: auto" />
                </div>
                <div class="mt-2">
                  <button type="button" id="saveImage1" class="btn btn-sm btn-primary" style="display: none">
                    <i class="fas fa-crop"></i> Crop & Save
                  </button>
                  <button type="button" id="deleteImage1" class="btn btn-sm btn-danger" style="display: none">
                    <i class="fas fa-trash"></i> Delete
                  </button>
                  <div id="croppedImage1Preview" class="mt-2 d-none">
                    <img id="croppedImage1" src="" alt="Cropped Image 1" class="img-thumbnail" style="max-height: 100px; width: auto;" />
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Image 2 Upload -->
            <div class="col-md-4 mb-3">
              <div class="image-upload-container">
                <div class="image-upload-card p-3 border rounded text-center" id="uploadCard2">
                  <label for="image2" class="form-label">
                    <i class="fas fa-camera fa-2x mb-2 text-primary"></i>
                    <h6>Side View</h6>
                    <p class="text-muted small">Click to select image</p>
                  </label>
                  <input type="file" id="image2" name="images" class="form-control d-none" accept="image/*" />
                  <img id="image2-thumbnail" src="" alt="Thumbnail" class="img-thumbnail mt-2 d-none" style="max-height: 100px; width: auto;">
                </div>
                <!-- Preview Area -->
                <div id="image2-preview" class="image-container mt-3" style="width: 100%; height: 300px; display: none">
                  <img id="image2-preview-img" src="" alt="Image 2" style="max-width: 100%; height: auto" />
                </div>
                <div class="mt-2">
                  <button type="button" id="saveImage2" class="btn btn-sm btn-primary" style="display: none">
                    <i class="fas fa-crop"></i> Crop & Save
                  </button>
                  <button type="button" id="deleteImage2" class="btn btn-sm btn-danger" style="display: none">
                    <i class="fas fa-trash"></i> Delete
                  </button>
                  <div id="croppedImage2Preview" class="mt-2 d-none">
                    <img id="croppedImage2" src="" alt="Cropped Image 2" class="img-thumbnail" style="max-height: 100px; width: auto;" />
                  </div>
                </div>
              </div>
            </div>
            
            <!-- Image 3 Upload -->
            <div class="col-md-4 mb-3">
              <div class="image-upload-container">
                <div class="image-upload-card p-3 border rounded text-center" id="uploadCard3">
                  <label for="image3" class="form-label">
                    <i class="fas fa-camera fa-2x mb-2 text-primary"></i>
                    <h6>Detail View</h6>
                    <p class="text-muted small">Click to select image</p>
                  </label>
                  <input type="file" id="image3" name="images" class="form-control d-none" accept="image/*" />
                  <img id="image3-thumbnail" src="" alt="Thumbnail" class="img-thumbnail mt-2 d-none" style="max-height: 100px; width: auto;">
                </div>
                <!-- Preview Area -->
                <div id="image3-preview" class="image-container mt-3" style="width: 100%; height: 300px; display: none">
                  <img id="image3-preview-img" src="" alt="Image 3" style="max-width: 100%; height: auto" />
                </div>
                <div class="mt-2">
                  <button type="button" id="saveImage3" class="btn btn-sm btn-primary" style="display: none">
                    <i class="fas fa-crop"></i> Crop & Save
                  </button>
                  <button type="button" id="deleteImage3" class="btn btn-sm btn-danger" style="display: none">
                    <i class="fas fa-trash"></i> Delete
                  </button>
                  <div id="croppedImage3Preview" class="mt-2 d-none">
                    <img id="croppedImage3" src="" alt="Cropped Image 3" class="img-thumbnail" style="max-height: 100px; width: auto;" />
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>

      <!-- Hidden input for cropped images (keep these) -->
      <input type="hidden" id="croppedImage1Data" name="croppedImage1" />
      <input type="hidden" id="croppedImage2Data" name="croppedImage2" />
      <input type="hidden" id="croppedImage3Data" name="croppedImage3" />

      <p class="text-muted small">Please wait some time after clicking add product as the uploading of images may take time.</p>
      <button type="submit" class="btn btn-primary mb-4">Add Product</button>
      <a href="/admin/products" class="btn btn-danger mb-4">Cancel</a>
    </form>
  </div>
</div>

<%- include('../../views/partials/admin/footer') %>

<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://cdn.jsdelivr.net/npm/cropperjs@1.5.12/dist/cropper.min.js"></script>

<!-- <script src="/js/custom.js"></script> -->

<script>
  document.addEventListener("DOMContentLoaded", function() {
  // Add highlight functionality
  document.getElementById("add-highlight").addEventListener("click", function() {
    const newInput = document.createElement("input");
    newInput.type = "text";
    newInput.name = "highlights[]";
    newInput.className = "form-control mb-2";
    newInput.placeholder = "Enter highlight";

    document.getElementById("highlights-list").appendChild(newInput);
  });

  // Add custom CSS for image upload styling
  document.head.insertAdjacentHTML('beforeend', `
    <style>
      .image-upload-card {
        cursor: pointer;
        transition: all 0.3s ease;
        height: 180px;
        display: flex;
        flex-direction: column;
        justify-content: center;
        align-items: center;
        background-color: #f8f9fa;
      }
      
      .image-upload-card:hover {
        background-color: #e9ecef;
        transform: translateY(-5px);
        box-shadow: 0 4px 8px rgba(0,0,0,0.1);
      }
      
      .image-container {
        border: 1px dashed #ced4da;
        border-radius: 4px;
        padding: 10px;
        background-color: #f8f9fa;
      }
      
      .uploaded-image-container {
        border: 1px solid #dee2e6;
        border-radius: 4px;
        padding: 10px;
        background-color: white;
      }
      
      .cropper-container {
        box-shadow: 0 0 10px rgba(0,0,0,0.1);
      }
    </style>
  `);

  // Form Validation
  function validateForm() {
    let isValid = true;

    // Check Product Name
    if (document.getElementById("productName").value.trim() === "") {
      document.getElementById("productName").classList.add("is-invalid");
      isValid = false;
    } else {
      document.getElementById("productName").classList.remove("is-invalid");
    }

    // Check Description
    if (document.getElementById("description").value.trim() === "") {
      document.getElementById("description").classList.add("is-invalid");
      isValid = false;
    } else {
      document.getElementById("description").classList.remove("is-invalid");
    }

    // Check Price
    if (document.getElementById("regularPrice").value <= 0) {
      document.getElementById("regularPrice").classList.add("is-invalid");
      isValid = false;
    } else {
      document.getElementById("regularPrice").classList.remove("is-invalid");
    }

    // Check Quantity
    if (document.getElementById("quantity").value <= 0) {
      document.getElementById("quantity").classList.add("is-invalid");
      isValid = false;
    } else {
      document.getElementById("quantity").classList.remove("is-invalid");
    }

    // Check for cropped images
    if (
      !document.getElementById("croppedImage1Data").value ||
      !document.getElementById("croppedImage2Data").value ||
      !document.getElementById("croppedImage3Data").value
    ) {
      Swal.fire({
        title: 'Images Required',
        text: 'Please upload and crop all three product images.',
        icon: 'warning',
        confirmButtonText: 'OK'
      });
      isValid = false;
    }

    return isValid;
  }

  // Form Submission
  $("#productForm").on("submit", function(e) {
    if (!validateForm()) {
      e.preventDefault();
      return;
    }
    e.preventDefault();

    $.ajax({
      type: "POST",
      url: $(this).attr("action"),
      data: new FormData(this),
      processData: false,
      contentType: false,
      success: function(response) {
        if (response.success) {
          Swal.fire({
            icon: "success",
            title: "Product Added",
            text: response.message,
            showConfirmButton: false,
            timer: 1500,
          }).then(() => {
            window.location.href = "/admin/products";
          });
        } else {
          Swal.fire({
            icon: "error",
            title: "Error",
            text: response.message || "There was an error adding the product.",
          });
        }
      },
      error: function() {
        Swal.fire({
          icon: "error",
          title: "Request Failed",
          text: "There was an issue connecting to the server. Please try again.",
        });
      },
    });
  });

  // Enhanced image upload handler
  function handleStyledImageUpload(
    inputId,
    previewId,
    saveButtonId,
    deleteButtonId,
    croppedPreviewId,
    hiddenInputId,
    thumbnailId,
    cardId
  ) {
    const inputElement = document.getElementById(inputId);
    const previewContainer = document.getElementById(previewId);
    const imageElement = document.getElementById(previewId + "-img");
    const saveButton = document.getElementById(saveButtonId);
    const deleteButton = document.getElementById(deleteButtonId);
    const croppedPreviewContainer = document.getElementById(croppedPreviewId + "Preview");
    const croppedPreview = document.getElementById(croppedPreviewId);
    const hiddenInput = document.getElementById(hiddenInputId);
    const thumbnail = document.getElementById(thumbnailId);
    const uploadCard = document.getElementById(cardId);

    let cropper;

    // Reset the image upload section
    function resetImageSection() {
      inputElement.value = ""; // Clear the file input
      previewContainer.style.display = "none"; // Hide the preview
      saveButton.style.display = "none"; // Hide the save button
      deleteButton.style.display = "none"; // Hide the delete button
      croppedPreviewContainer.classList.add("d-none"); // Hide the cropped preview container
      croppedPreview.src = ""; // Clear the cropped image preview
      hiddenInput.value = ""; // Clear the hidden input
      thumbnail.src = ""; // Clear the thumbnail
      thumbnail.classList.add("d-none"); // Hide the thumbnail
      uploadCard.style.opacity = "1"; // Show the upload card
      if (cropper) {
        cropper.destroy(); // Destroy the cropper instance
      }
    }

    // Handle file selection
    inputElement.addEventListener("change", function(event) {
      const file = event.target.files[0];
      if (file) {
        const reader = new FileReader();
        reader.onload = function(e) {
          // Show thumbnail
          thumbnail.src = e.target.result;
          thumbnail.classList.remove("d-none");
          uploadCard.style.opacity = "0.5"; // Dim the upload card
          
          // Set up cropper
          imageElement.src = e.target.result;
          previewContainer.style.display = "block";
          saveButton.style.display = "inline-block";
          deleteButton.style.display = "inline-block";

          // Initialize cropper
          cropper = new Cropper(imageElement, {
            viewMode: 1,
            responsive: true,
            rotatable: true,
            scalable: true,
            guides: true,
            autoCropArea: 0.8
          });

          // Save cropped image
          saveButton.onclick = function() {
            const croppedCanvas = cropper.getCroppedCanvas({
              width: 800, // Set standard dimensions
              height: 800,
              imageSmoothingEnabled: true,
              imageSmoothingQuality: 'high'
            });

            croppedPreview.src = croppedCanvas.toDataURL("image/jpeg", 0.9);
            croppedPreviewContainer.classList.remove("d-none");
            hiddenInput.value = croppedCanvas.toDataURL("image/jpeg", 0.9);
            
            // Hide the cropper view after saving
            previewContainer.style.display = "none";
            saveButton.style.display = "none";
          };
        };
        reader.readAsDataURL(file);
      }
    });

    // Handle delete image
    deleteButton.addEventListener("click", function() {
      resetImageSection();
    });
  }

  // Initialize the styled image upload handlers
  handleStyledImageUpload(
    "image1",
    "image1-preview",
    "saveImage1",
    "deleteImage1",
    "croppedImage1",
    "croppedImage1Data",
    "image1-thumbnail",
    "uploadCard1"
  );
  handleStyledImageUpload(
    "image2",
    "image2-preview",
    "saveImage2",
    "deleteImage2",
    "croppedImage2",
    "croppedImage2Data",
    "image2-thumbnail",
    "uploadCard2"
  );
  handleStyledImageUpload(
    "image3",
    "image3-preview",
    "saveImage3",
    "deleteImage3",
    "croppedImage3",
    "croppedImage3Data",
    "image3-thumbnail",
    "uploadCard3"
  );
});
</script>
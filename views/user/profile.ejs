<head>
  <style>
    .sidebar a.active {
      background-color: #007bff;
      color: white;
    }

    .sidebar a.active i {
      color: white;  
    }

    .sidebar {
      position: fixed;
      top: 0;
      bottom: 0;
      left: 0;
      width: 50px;
      background-color: #f8f9fa;
      padding-top: 20px;
      margin-bottom: 30px;
    }

    .sidebar a {
      display: block;
      padding: 10px 15px;
      color: #000;
      text-decoration: none;
      margin-bottom: 10px;
    }

    .sidebar a:hover {
      background-color: #007bff;
      color: white;
    }

    .alert {
      margin-top: 20px;
    }
  </style>
</head>
<%- include('../../views/partials/user/header') %>

<div class="wrapper">
  <div class="row">
    <!-- Sidebar -->
    <%- include('../../views/partials/user/sidebar', { currentPage: currentPage
    }) %>

    <!-- Main Content -->
    <div class="ml-5 col-md-8">
      <h2 class="mt-4 text-center mb-4">
        <%= section === 'addresses' ? 'Your Addresses' : section === 'orders' ?
        'Your Orders' :  section === 'wishlist' ? '': 'Your Profile' %>
      </h2>
 
      <% if (section === 'addresses') { %> 
      <div class="d-flex justify-content-end mt-3">
        <a href="/profile/address/add" class="btn btn-primary mb-3">
          <i class="fas fa-plus"></i> Add New Address
        </a>
      </div> 
      <% if (addresses && addresses.length > 0) { %>
      <div class="d-flex flex-wrap justify-content-start">
        <% if (!defaultAddress) { %>
        <span class="alert alert-warning" role="alert">
          You don't have a default address. Please set one as your default.
        </span>
        <% } %> <% addresses.forEach((address, index) => { %>
        <!-- Loop through each address -->
        <% address.address.forEach((addr, addrIndex) => { %>
        <!-- Loop through address types inside each address -->
        <div class="card p-4 mb-5 me-4 shadow" style="flex: 1 1 40%">
          <!-- Flexbox for responsiveness -->
          <div class="card-title text-center mt-2">
            <% if (addr.isDefault === true) { %> Default <% } else { %> Address
            <%= (index * address.address.length) + addrIndex + 1 %> <% } %> -
            <%= addr.addressType %>
          </div> 
          <div class="card-body">
            <div class="address-card">
              <p><strong><%= user.name %></strong></p>
              <p><%= addr.name %></p>
              <p><%= addr.city %>, <%= addr.landMark %></p>
              <p><%= addr.state %>, <%= addr.pincode %></p>
              <p><strong>Phone:</strong> <%= addr.phone %></p>
              <% if (addr.altPhone) { %>
                <p><strong>Alt Phone:</strong> <%= addr.altPhone %></p> 
                <% } %>
              <div class="d-flex justify-content-end">
                <a
                  href="/profile/address/edit?id=<%= addr._id %>"
                  class="card-link"
                >
                  <i class="fas fa-edit"></i> Edit
                </a>
                <a
                  href="javascript:void(0);"
                  class="card-link text-danger ms-3"
                  data-id="<%= addr._id %>"
                  id="deleteAddressLink"
                >
                  <i class="fas fa-trash"></i> Remove
                </a>
              </div>
            </div>
          </div>
        </div>
        <% }) %> 
        <% }) %> 
      </div> 
      <% } else { %>
      <p>No addresses found.</p>
      <% } %> <% } else if (section === 'orders') { %>
      <div class="d-flex flex-wrap justify-content-start">
        <% if (orders && orders.length > 0) { %> <% orders.forEach(order => { %>
        <div class="card mb-4 shadow p-2" style="width: 100%; max-width: 900px">
          <div class="card-body">
            <div class="row align-items-center"> 
              <div class="col-12">
                <h5>Order ID: <%= order._id %></h5>
                <p>
                  Placed on: <%= new Date(order.createdOn).toLocaleDateString()
                  %>
                </p>
              </div>
 
              <div class="col-12">
                <p>
                  <strong>Items: </strong>
                  <% order.ordereditems.forEach((item, index) => { %>
                  <span
                    ><%= item.product.productName %><%= index <
                    order.ordereditems.length - 1 ? ', ' : '' %></span
                  >
                  <% }) %>
                </p>
                <% if(order.status === 'Cancelled') { %>
                  <p class="text-danger">This order was cancelled!</p>
                  <% } %>
              </div>
 
              <div class="col-12 text-end">
                <a
                  href="/profile/order/<%= order._id %>"
                  class="btn btn-primary"
                  >View Order Details</a
                >
              </div>
            </div>
          </div>
        </div>
        <% }) %> <% } else { %>
        <p>No orders placed yet.</p>
        <% } %>
      </div>

      <% } else if (section === 'wishlist') { %>
        <!-- Wishlist Section -->
    <div class="container mt-4">
      <!-- Wishlist Title with Item Count -->
      <h2 class="text-center mb-4">Your Wishlist (<%= wishlistItems.length %> items)</h2>

      <% if (wishlistItems && wishlistItems.length > 0) { %>
        <div class="wishlist-items bg-white p-4 rounded">
          <% wishlistItems.forEach((item, index) => { %>
            <!-- Wishlist Item Row -->
            <div class="wishlist-item d-flex align-items-center mb-4" style="border-bottom: 1px solid #ddd; padding-bottom: 15px;">
              <!-- Product Image (First Column) -->
              <div class="col-md-3">
                <a href="/product-details?id=<%= item.id %>">
                  <img src="<%= item.productImage[0] %>" alt="<%= item.productName %>" style="width: 150px; height: 150px; object-fit: cover; margin-right: 15px;">
                  </a>
              </div>

              <!-- Product Info (Second Column) -->
              <div class="col-md-6">
            <a href="/product-details?id=<%= item.id %>">
                <h5 class="mb-1 text-black text-start"><%= item.productName %></h5>
                <p class="mb-1">
                  <strong>&#8377; <%= item.salePrice %></strong>
                  <% if (item.productOffer > 0) { %>
                    <!-- Offer details -->
                    <small class="text-danger"><%= item.productOffer %>% off</small><br>
                    <small class="text-muted"><del>&#8377; <%= item.regularPrice %></del></small>
                  <% } %>
                </p>
                </a>
              </div>

              <!-- Delete Icon (Third Column) -->
              <div class="col-md-3 text-right">
                <a href="#" class="text-danger delete-wishlist-item" data-product-id="<%= item.productId %>">
                  <!-- FontAwesome Trash Icon -->
                  <i class="bi bi-trash"></i>
                </a>
              </div>
            </div>

            <!-- Horizontal Line to Separate Items -->
            <% if (index < wishlistItems.length - wishlistItems.length) { %>
              <hr>
            <% } %>
          <% }) %>
        </div>
      <% } else { %>
        <div class="text-center">
          <h5 class="text-black">Your wishlist is empty!</h5>
          <a href="/shop" class="btn btn-primary mb-5 mt-3">Go to Shop</a>
        </div>
      <% } %>
    </div>

    <!-- wallet content -->
    <% } else if (section === 'wallet') { %>

        <!-- This is the start of your wallet page design -->
  <div class="container mt-4">
    <!-- Wallet Card Section -->
    <div class="card mb-4 shadow-sm p-5">
      <div class="card-body d-flex align-items-center">
        <!-- Left Column: Wallet Icon -->
        <div class="d-flex align-items-center">
          <i class="fas fa-wallet fa-3x text-muted"></i>
        </div>

        <!-- Middle Column: Wallet Balance -->
        <div class="ml-3">
          <h4 class="card-title mb-0">Wallet Balance</h4>
          <% if (wallet && wallet.balance !== undefined) { %>
            <p class="h5 text-muted mb-0">&#8377; <%= wallet.balance.toFixed(2) %></p>
          <% } else { %>
            <p class="h5 text-muted mb-0">&#8377; 0.00</p>
          <% } %>
        </div>

        <!-- Right Column: Add Money Button -->
        <div class="ml-auto">
          <!-- <button class="btn btn-success" data-toggle="modal" data-target="#addMoneyModal">
            Add Money
          </button> -->
          <button class="btn btn-danger ml-2" data-toggle="modal" data-target="#withdrawMoneyModal">
            Withdraw Money
          </button>
        </div>
      </div>
    </div>

    <% if (transactions.length > 0) { %>
    <!-- Transaction History Table -->
      <h4>Transaction History</h4>
      <table class="table table-striped">
        <thead>
          <tr>
            <th>Date</th>
            <th>Transaction</th>
            <th>Amount</th>
            <th>Balance</th>
          </tr>
        </thead>
        <tbody>
          <% transactions.forEach(function(transaction) { %>
            <tr>
              <td>
                <%= new Date(transaction.date).toLocaleString('en-US', {
                  weekday: 'short',   
                  year: 'numeric',    
                  month: 'short',    
                  day: 'numeric',     
                  hour: '2-digit',   
                  minute: '2-digit',  
                  second: '2-digit',  
                  hour12: true        
                }) %>
              </td>
              
              <td><%= transaction.type %></td>
              <td>&#8377; <%= transaction.amount.toFixed(2) %></td>
              <td>&#8377; <%= transaction.balance.toFixed(2) %></td>
            </tr>
          <% }) %>
        </tbody>
      </table>
      <% } else { %>
        <p>No transactions found.</p>
        <% } %>
        <!-- Pagination -->
      <div class="container mt-3 mb-3">
        <nav aria-label="Page navigation">
          <ul
            class="pagination justify-content-center mb-20"
            style="margin-right: 200px"
          >
            <% for(let i = 1; i <= totalPages; i++) { %>
            <li class="page-item <%= (i === currentPage) ? 'active' : '' %>">
              <a class="page-link" href="/userProfile?section=wallet&page=<%= i %>"><%= i %></a>
            </li>
            <% } %>
          </ul>
        </nav>
      </div>
    </div>
  </div>

  <!-- Modal for Adding Money -->
  <div class="modal fade" id="addMoneyModal" tabindex="-1" role="dialog" aria-labelledby="addMoneyModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
      <div class="modal-content">
        <div class="modal-header">
          <h5 class="modal-title" id="addMoneyModalLabel">Add Money to Wallet</h5>
          <button type="button" class="close" data-dismiss="modal" aria-label="Close">
            <span aria-hidden="true">&times;</span>
          </button>
        </div>
        <form id="addMoneyForm">
          <div class="modal-body">
            <div class="form-group">
              <label for="amount">Amount</label>
              <input type="number" class="form-control" id="amount" name="amount" required placeholder="Enter amount to add" min="0.01" step="0.01">
            </div>
          </div>
          <div class="modal-footer">
            <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
            <button type="submit" class="btn btn-primary">Add Money</button>
          </div>
        </form>
      </div>
    </div>
  </div>

  <!-- Withdraw Money Modal -->
<div class="modal fade" id="withdrawMoneyModal" tabindex="-1" role="dialog" aria-labelledby="withdrawMoneyModalLabel" aria-hidden="true">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <h5 class="modal-title" id="withdrawMoneyModalLabel">Withdraw Money from Wallet</h5>
        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
          <span aria-hidden="true">&times;</span>
        </button>
      </div>
      <form id="withdrawMoneyForm">
        <div class="modal-body">
          <div class="form-group">
            <label for="withdrawAmount">Amount</label>
            <input type="number" class="form-control" id="withdrawAmount" name="amount" required placeholder="Enter amount to withdraw" min="0.01" step="0.01">
          </div>
        </div>
        <div class="modal-footer">
          <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
          <button type="submit" class="btn btn-danger">Withdraw Money</button>
        </div>
      </form>
    </div>
  </div>
</div>


      <% } else { %>
      <!-- Dashboard content -->
      <div class="card">
        <div class="card-body">
          <div class="col-md-9 content">
            <h2 class="mb-4 text-center mt-4">Hello <%= user.name %>!</h2>

            <!-- Profile Information -->
            <div class="card mb-4">
              <div class="card-body p-3">
                <h5 class="card-title">Profile Information</h5>
                <p><strong>Email:</strong> <%= user.email %></p>
                <% if (user.phone) {%>
                  <p><strong>Phone Number:</strong> <%= user.phone %></p>
                  <% } %>

                  <a href="/profile/edit" class="btn btn-info">
                    <i class="fas fa-user-edit"></i> Edit Profile
                  </a>

                <a href="/profile/change-email" class="btn btn-primary"
                  >Change Email</a
                >
                <a href="/profile/change-password" class="btn btn-warning"
                  >Change Password</a
                >
              </div>
            </div>
          </div>
        </div>
      </div>
      <% } %>
    </div>
  </div>
</div>

<%- include('../../views/partials/user/footer') %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
  // When clicking on the delete button
  document.querySelectorAll("#deleteAddressLink").forEach((link) => {
    link.addEventListener("click", function (event) {
      // Prevent the default link behavior
      event.preventDefault();

      const addressId = link.getAttribute("data-id"); // Get the address ID from the data attribute

      // Show SweetAlert confirmation
      Swal.fire({
        title: "Are you sure?",
        text: "You won't be able to revert this!",
        icon: "warning",
        showCancelButton: true,
        confirmButtonColor: "#3085d6",
        cancelButtonColor: "#d33",
        confirmButtonText: "Yes, delete it!",
      }).then((result) => {
        if (result.isConfirmed) {
          // Proceed with the deletion if confirmed using AJAX
          deleteAddress(addressId);
        }
      });
    });
  });

  // Function to handle address deletion via AJAX
  function deleteAddress(addressId) {
    $.ajax({
      url: `/profile/address/delete?id=${addressId}`,
      method: "GET", // Use GET for this delete operation
      success: function (response) {
        // Show success alert
        Swal.fire({
          title: "Deleted!",
          text: "The address has been deleted successfully.",
          icon: "success",
          confirmButtonText: "OK",
        }).then(() => {
          // Redirect to user profile page to show updated list of addresses
          window.location.href = "/userProfile?section=addresses";
        });
      },
      error: function (error) {
        // Show error alert if something goes wrong
        Swal.fire({
          title: "Error!",
          text: "An error occurred while deleting the address. Please try again.",
          icon: "error",
          confirmButtonText: "OK",
        });
      },
    });
  }

  document.addEventListener('DOMContentLoaded', () => {
        const deleteButtons = document.querySelectorAll('.delete-wishlist-item');
        
        deleteButtons.forEach(button => {
            button.addEventListener('click', async (event) => {
                event.preventDefault();
                const productId = event.target.closest('a').getAttribute('data-product-id'); // Get the product ID

                try {
                    // Send a DELETE request to remove the item from the wishlist
                    const response = await fetch(`/deleteFromWishlist`, {
                        method: 'DELETE',
                        headers: {
                            'Content-Type': 'application/json',
                        },
                        body: JSON.stringify({
                            productId: productId
                        }),
                        credentials: 'same-origin',
                    });

                    const data = await response.json(); // Parse the response as JSON

                    if (data.success) {
                        Swal.fire({
                            title: 'Success!',
                            text: 'Item removed from wishlist',
                            icon: 'success',
                            confirmButtonColor: '#3085d6',
                            confirmButtonText: 'OK',
                        }).then(() => {
                            location.reload(); // Reload the page to reflect the changes
                        });
                    } else {
                        Swal.fire({
                            title: 'Error',
                            text: data.message,
                            icon: 'error',
                            confirmButtonColor: '#d33',
                        });
                    }
                } catch (error) {
                    console.error("Error:", error);
                    alert("There was an error removing the item from the wishlist.");
                }
            });
        });
    });

       // Handle Add Money form submission
  document.getElementById('addMoneyForm').addEventListener('submit', function (e) {
    e.preventDefault();
    const amount = document.getElementById('amount').value;

    if (parseFloat(amount) <= 0) {
      // Display an error alert if the amount is invalid
      Swal.fire({
        title: 'Error',
        text: 'Please enter a valid amount greater than 0.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
      return;
    }

    fetch('/wallet/add-money', {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json',
      },
      body: JSON.stringify({ amount }),
    })
    .then(response => response.json())
    .then(data => {
      if (data.message) {
        // Display success alert with the wallet balance
        Swal.fire({
          title: 'Success!',
          text: data.message + '\nNew Balance: $' + data.wallet.balance.toFixed(2),
          icon: 'success',
          confirmButtonText: 'OK'
        }).then(() => {
          // Optionally, update the wallet balance on the page without reloading
          document.querySelector('.card-body .h5').textContent = `$${data.wallet.balance.toFixed(2)}`;
          $('#addMoneyModal').modal('hide'); // Hide the modal after success
        });
      }
    })
    .catch(err => {
      // Display error alert if there is a problem with the request
      Swal.fire({
        title: 'Error',
        text: 'An error occurred while adding money.',
        icon: 'error',
        confirmButtonText: 'OK'
      });
    });
  });


  // Handle Withdraw Money form submission using jQuery AJAX
$('#withdrawMoneyForm').submit(function (e) {
  e.preventDefault();
  
  let amount = $('#withdrawAmount').val(); // Get the input value
  
  amount = parseFloat(amount); // Convert to a number

  console.log('Withdrawing amount:', amount);  // Check if the amount is now a number

  if (isNaN(amount) || amount <= 0) {
    Swal.fire({
      title: 'Error',
      text: 'Please enter a valid amount greater than 0.',
      icon: 'error',
      confirmButtonText: 'OK'
    });
    return;
  }

  // Proceed with the POST request if the amount is valid
  $.ajax({
    url: '/wallet/withdraw-money',  // Endpoint for withdraw money
    type: 'POST',                  // HTTP Method
    contentType: 'application/json',  // Sending JSON data
    data: JSON.stringify({ amount }),  // Convert to JSON
    success: function (data) {
      // Check if the operation was successful
      if (data.success) {
        Swal.fire({
          title: 'Success!',
          text: data.message + '\nNew Balance: ₹ ' + data.wallet.balance.toFixed(2),
          icon: 'success',
          confirmButtonText: 'OK'
        }).then(() => {
          // Update the balance on the page
          $('.card-body .h5').text(`₹ ${data.wallet.balance.toFixed(2)}`);
          $('#withdrawMoneyModal').modal('hide');  // Close the modal
          location.reload();
        });
      } else {
        Swal.fire({
          title: 'Error',
          text: data.message,
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    },
    error: function (xhr, status, error) {
      // Handle error responses (e.g., Insufficient balance)
      const response = xhr.responseJSON;

      // Check if there is an error message in the response
      if (response && response.message) {
        Swal.fire({
          title: 'Error',
          text: response.message,  // Get the error message from backend
          icon: 'error',
          confirmButtonText: 'OK'
        });
      } else {
        Swal.fire({
          title: 'Error',
          text: 'An unexpected error occurred.',
          icon: 'error',
          confirmButtonText: 'OK'
        });
      }
    }
  });
});

</script>

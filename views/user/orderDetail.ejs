<%- include('../../views/partials/user/header') %>

<div class="ml-5">
  <!-- Breadcrumbs -->
  <nav aria-label="breadcrumb">
    <ol class="breadcrumb">
      <li class="breadcrumb-item"><a href="/">Home</a></li>
      <li class="breadcrumb-item"><a href="/userProfile">Profile</a></li>
      <li class="breadcrumb-item">
        <a href="/userProfile?section=orders">Order</a>
      </li>
      <li class="breadcrumb-item active" aria-current="page">Order Details</li>
    </ol>
  </nav>
</div>

<div class="container mt-4 mb-5">
  <h3 class="text-center">Order Details</h3>
  <h5 class="text-black-50 my-2">Id: <%= order._id %></h5>
  <p class="text-center">
    <strong>Placed on:</strong> <%= new Date(order.createdOn).toLocaleDateString() %>
  </p>

  <div class="d-flex justify-content-center">
    <% if (order.status === 'Processing' || order.status === 'Pending') { %>
      <button class="btn btn-danger my-2 cancel-order-btn" data-order-id="<%= order._id %>">Cancel Order</button>
    <% } %>
    <% if (order.status === 'Delivered') { %>
      <button class="btn btn-danger my-2 return-order-btn" data-order-id="<%= order._id %>">Return Order</button>
    <% } %>
    <% if (order.status === 'Return Request') { %>
      <div class="return-reason">
        <p class="text-muted">Return Reason: <span class="text-black"><%= order.ordereditems[0].returnReason %></span></p> 
        <button class="btn btn-danger my-2 cancel-return-order-btn" data-order-id="<%= order._id %>">Cancel Return Request</button>
      </div>
    <% } %>
    <% if (order.status === 'Returned') { %>
      <p>Your Order is returned for the reason: <%= order.ordereditems[0].returnReason %></p>
    <% } %>
  </div>

  <div class="text-center">
    <p><span class="text-muted">Selected Address:</span> <br>
    <%= address.name %><br>
    <%= address.city %>, <% if (address.landMark) {%> <%= address.landMark %>, <% } %><br>
    <%= address.state %>, <%= address.pincode %></p>
  </div>
  

  <div class="d-flex justify-content-center">
    <div class="col-12 col-md-8">
      <% order.ordereditems.forEach(item => { %>
      <div class="card mb-4 shadow p-2" style="width: 100%; max-width: 900px">
        <div class="card-body">
          <div class="row align-items-center">
            <div class="col-2">
              <a href="/product-details?id=<%= item.product._id %>">
                <img src="<%= item.product.productImage[0] %>" alt="<%= item.product.productName %>" class="img-fluid" style="max-height: 80px; width: auto"/>
              </a>
            </div>
            <div class="col-5">
              <a href="/product-details?id=<%= item.product._id %>">
                <p><%= item.product.productName %></p>
              </a>
              <span>Price: ₹<%= order.finalAmount %></span>
              <% if (order.discount > 0) { %>
                <span class="text-success small pl-3">You saved ₹<%= order.discount %></span>
                <% } %>
            </div>
            <div class="col-3 text-end">
              <div class="text-end justify-content-center">
                <% let statusColor = 'gray'; if (order.status === 'Delivered') { statusColor = 'green'; } else if (order.status === 'Processing') { statusColor = 'yellow'; } else if (order.status === 'Cancelled') { statusColor = 'red'; } %>
                <span class="status-dot" style="background-color: <%= statusColor %>; border-radius: 50%; display: inline-block; width: 15px; height: 15px; margin-top: 10px;"></span>
                <span class="card-text ml-3"><%= order.status %></span>

               

                <!-- Rate and Review Link -->
                <% if (order.status === 'Delivered') { %>
                  <% 
                    const review = reviews.find(r => r.productId.toString() === item.product._id.toString());
                    if (review && !review.existingReview) { 
                  %>
                    <p>
                      <a href="/profile/order/<%= order._id %>/review?product_id=<%= item.product._id %>" class="mt-4 text-muted fw-bolder">Rate & Review</a>
                    </p>
                  <% 
                    } else if (review && review.existingReview) { 
                  %>
                    <p class="text-warning" style="font-size: 13px">Already reviewed</p>
                  <% } %>
                <% } %>
              </div>
            </div>
          </div>
        </div>
      </div>
      <% }) %>
    </div>
  </div>
</div>

<%- include('../../views/partials/user/footer') %>

<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
  // Handle cancel order action with SweetAlert confirmation
  $('.cancel-order-btn').on('click', function () {
    const orderId = $(this).data('order-id');
    
    Swal.fire({
      title: 'Are you sure?',
      text: 'Do you want to cancel this order?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, cancel it!',
      cancelButtonText: 'No, keep it'
    }).then((result) => {
      if (result.isConfirmed) {
        $.ajax({
          url: `/order/cancel/${orderId}`,
          method: 'POST',
          success: function (response) {
            if (response.success) {
              Swal.fire('Cancelled!', 'Your order has been cancelled.', 'success').then(() => {
                location.reload(); 
              });
            } else {
              Swal.fire('Error!', response.message, 'error');
            }
          },
          error: function () {
            Swal.fire('Error!', 'An error occurred while cancelling the order. Please try again.', 'error');
          }
        });
      }
    });
  });


  $('.return-order-btn').on('click', function () {
  const orderId = $(this).data('order-id');

  Swal.fire({
    title: 'Are you sure?',
    text: 'Do you want to return this order?',
    icon: 'warning',
    showCancelButton: true,
    confirmButtonText: 'Yes, return it!',
    cancelButtonText: 'No, keep it',
    input: 'textarea', // This creates a textarea for the return reason
    inputPlaceholder: 'Please provide a reason for returning this order...',
    inputAttributes: {
      'aria-label': 'Reason for returning',
      'maxlength': 300
    },
    showLoaderOnConfirm: true,
    preConfirm: (returnReason) => {
      if (!returnReason) {
        Swal.showValidationMessage('You must provide a reason for the return');
        return false;
      }

      // Show confirmation that the return request has been submitted
      Swal.fire({
        title: 'Return Request Submitted',
        text: 'Your return request has been submitted. Once the process is complete, you will be notified.',
        icon: 'info',
        confirmButtonText: 'Got it',
      });

      // Send the return request to the server
      return fetch(`/order/return/${orderId}`, {
        method: 'POST',
        body: JSON.stringify({ returnReason }),
        headers: {
          'Content-Type': 'application/json',
        },
      })
      .then(response => response.json())
      .catch(error => {
        Swal.showValidationMessage('Request failed: ' + error);
      });
    },
  }).then((result) => {
    if (result.isConfirmed) {
      // Once the backend completes the return, notify the user
      Swal.fire('Return Requested', 'Your return request is under review. We will notify you once it is processed.', 'success').then(() => {
        location.reload(); // Reload page after returning
      });
    }
  });
});

document.querySelectorAll('.cancel-return-order-btn').forEach(button => {
  button.addEventListener('click', function () {
    const orderId = this.dataset.orderId;

    Swal.fire({
      title: 'Are you sure?',
      text: 'Do you want to cancel this return request?',
      icon: 'warning',
      showCancelButton: true,
      confirmButtonText: 'Yes, cancel it!',
      cancelButtonText: 'No, keep it'
    }).then((result) => {
      if (result.isConfirmed) {
        fetch(`/order/cancel-return/${orderId}`, {
          method: 'POST',
          headers: {
            'Content-Type': 'application/json'
          }
        })
        .then(response => response.json())
        .then(data => {
          if (data.success) {
            Swal.fire('Cancelled!', 'Your return request has been cancelled.', 'success').then(() => {
              location.reload(); 
            });
          } else {
            Swal.fire('Error!', data.message, 'error');
          }
        })
        .catch(error => {
          Swal.fire('Error!', 'An error occurred while cancelling the return request. Please try again.', 'error');
        });
      }
    });
  });
});


</script>

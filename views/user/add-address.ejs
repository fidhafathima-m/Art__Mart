<%- include("../../views/partials/user/header") %>
<div class="mt-4 ps-4 ">
    <!-- Breadcrumbs -->
    <nav aria-label="breadcrumb">
      <ol class="breadcrumb">
        <li class="breadcrumb-item"><a href="/">Home</a></li>
        <li class="breadcrumb-item"><a href="/userProfile">Profile</a></li>
        <li class="breadcrumb-item"><a href="/userProfile?section=addresses">Address</a></li>
        <li class="breadcrumb-item active" aria-current="page">Add Address</li>
      </ol>
    </nav>
<div class="container mt-4">
   <h3 class="mt-3" style="color: #046963; margin-bottom:70px">Create User Address</h3>
   <form id="addressForm" method="POST" action="/profile/address/addAddress" class="border-0 p-3">
       <div class="row mb-50">
        <div class="form-group col-md-4">
            <label for="addressType">Address Type:</label>
            <select class="form-control border-3" id="addressType" name="addressType" required>
                <option value="Home">Home</option>
                <option value="Office">Office</option>
                <option value="Other">Other</option>
            </select>
         </div>
           <div class="form-group col-md-4">
               <label for="name">Name:</label>
               <input type="text" class="form-control border-3" id="name" name="name" required>
           </div>
           <div class="form-group col-md-4">
               <label for="city">City:</label>
               <input type="text" class="form-control border-3" id="city" name="city" required>
           </div>
       </div>
       <div class="row mb-3">
           <div class="form-group col-md-4">
               <label for="landMark">Landmark:</label>
               <input type="text" class="form-control border-3" id="landMark" name="landMark" required>
           </div>
           <div class="form-group col-md-4">
               <label for="state">State:</label>
               <input type="text" class="form-control border-3" id="state" name="state" required>
           </div>
           <div class="form-group col-md-4">
               <label for="pincode">Pincode:</label>
               <input type="number" class="form-control border-3" id="pincode" name="pincode" required>
           </div>
       </div>
       <div class="row mb-3">
           <div class="form-group col-md-4">
               <label for="phone">Phone:</label>
               <input type="number" class="form-control border-3" id="phone" name="phone" required>
           </div>
           <div class="form-group col-md-4">
               <label for="altPhone">Alternate Phone:</label>
               <input type="number" class="form-control border-3" id="altPhone" name="altPhone" required>
           </div>
       </div>
       <button type="submit" id="submitButton" class="btn btn-primary">Submit</button>
       <a href="/userProfile?section=addresses" class="btn btn-danger">Cancel</a>

   </form>
</div>
</div>
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<script>
    document.getElementById('addressForm').addEventListener('submit', function(event) {
    event.preventDefault();  // Prevent default form submission

    // Validate the form first
    if (validateForm()) {
        const formData = new FormData(document.getElementById('addressForm'));
        const dataObject = {};

        // Convert form data to a plain object
        formData.forEach((value, key) => {
            dataObject[key] = value;
        });

        // Make the Ajax call
        fetch('/profile/address/addAddress', {
            method: 'POST',
            headers: {
                'Content-Type': 'application/json'
            },
            body: JSON.stringify(dataObject)
        })
        .then(response => response.json())
        .then(data => {
            if (data.success) {
                // If the address is successfully added
                Swal.fire({
                    title: 'Address Added!',
                    text: 'Your address has been added successfully.',
                    icon: 'success',
                    confirmButtonText: 'Ok'
                }).then(() => {
                    // Redirect to the user profile page after success
                    window.location.href = '/userProfile?section=addresses';
                });
            } else {
                // Show error alert if address already exists
                Swal.fire({
                    title: 'Error!',
                    text: data.message,
                    icon: 'error',
                    confirmButtonText: 'Ok'
                });
            }
        })
        .catch(error => {
            // Handle any other errors
            console.error('Error:', error);  // Log error to console
            Swal.fire({
                title: 'Error!',
                text: 'Something went wrong. Please try again.',
                icon: 'error',
                confirmButtonText: 'Ok'
            });
        });
    }
});

// Form validation function
function validateForm() {
    let isValid = true;
    const requiredFields = ["addressType", "name", "city", "landMark", "state", "pincode", "phone", "altPhone"];
    const errorMessages = [];

    requiredFields.forEach(function(field) {
        const input = document.getElementById(field);
        if (input.value.trim() === "") {
            errorMessages.push(`Please fill the ${field} field.`);
            isValid = false;
        }
    });

    // Additional validation checks
    const namePattern = /^[A-Za-z\s]+$/;
    const pincodePattern = /^\d{6}$/;
    const phonePattern = /^\d{10}$/;
    const name = document.getElementById('name').value;
    const city = document.getElementById('city').value;
    const landMark = document.getElementById('landMark').value;
    const state = document.getElementById('state').value;
    const pincode = document.getElementById('pincode').value;
    const phone = document.getElementById('phone').value;
    const altPhone = document.getElementById('altPhone').value;

    if (!namePattern.test(name) || !namePattern.test(city) || !namePattern.test(landMark) || !namePattern.test(state)) {
        errorMessages.push('Name, City, Landmark, and State should contain alphabets only.');
        isValid = false;
    }

    if (!pincodePattern.test(pincode)) {
        errorMessages.push('Pincode should be a 6-digit number.');
        isValid = false;
    }

    if (!phonePattern.test(phone) || !phonePattern.test(altPhone)) {
        errorMessages.push('Phone and Alternate Phone should be 10-digit numbers.');
        isValid = false;
    }

    if (phone === altPhone) {
        errorMessages.push('Phone and Alternate Phone numbers should be different.');
        isValid = false;
    }

    if (!isValid) {
        Swal.fire({
            title: 'Error!',
            text: errorMessages.join(' '),
            icon: 'error',
            confirmButtonText: 'Ok'
        });
    }

    return isValid;
}
</script>

<%- include("../../views/partials/user/footer") %>

